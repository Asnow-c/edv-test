name: CI
on:
  push:
    branches:
      - "*"
jobs:
  build:
    if: false
    runs-on: ubuntu-latest

    steps:
      - name: Prepare
        uses: actions/checkout@v3
      - name: Setup-deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      - name: Run
        run: |
          echo ::group::Deno cache
          deno run -A ./.github/scripts/publish.ts
        env:
          GITHUB_TOKEN: ${{secrets.CI_GITHBU_TOKEN}}
  check:
    if: false
    runs-on: ubuntu-latest
    permissions:
      actions: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Upload
        uses: asnowc/actions@upload-artifact/v1
        with:
          path: list.json
          name: dist-c
  script:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      - name: Script
        uses: asnowc/actions@deno-script/v1
        id: check_tag
        with:
          args: -A
          script: |
            import { setOutput } from "npm:@actions/core";
            import { writeNewTagToOutput } from "https://cdn.jsdelivr.net/gh/dnpack/action-script@0.3.0/cmd/github_repo.ts";
            setOutput("YY", "BB");
            await writeNewTagToOutput(Math.random().toString(), "NEW_TAG");
      - name: A
        if: ${{!steps.check_tag.outputs.NEW_TAG}}
        run: |
          echo ${{steps.check_tag.outputs.BB}}
          echo $TAG
          echo ${{steps.check_tag.outputs.NEW_TAG}}
        env:
          TAG: ${{steps.check_tag.outputs.NEW_TAG}}

      - name: B
        if: ${{steps.check_tag.outputs.NEW_TAG}}
        run: echo ${{steps.check_tag.outputs.NEW_TAG}}
